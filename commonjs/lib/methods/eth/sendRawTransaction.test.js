"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ava_1 = __importDefault(require("ava"));
const eth_ = __importStar(require("./index.js"));
const autoRetry_js_1 = require("../autoRetry.js");
const index_js_1 = require("../../index.js");
const eth = autoRetry_js_1.autoRetyAllMethods(eth_);
// priv key: 52087001767e9c30288232baa07d3ac5cf0e3c8de30a49b98424ccf9b92e2dfd
// const testAccount1 = ethAddress.fromTron("TAJLmoNzgYHDX5osdfa3c5s9G35fZMfaMT");
// const testAccount2 = ethAddress.fromTron("TBfAjdXMuo4rSGU8sT4rqRSFDZn1yLik8S");
// const testAccount3 = ethAddress.fromTron("TSTsLfQGzKrpU61LF7J3q4iiwnHBzAGLHC");
const context = index_js_1.createContext({ network: "shasta" });
ava_1.default.skip("eth_sendRawTransaction", async (t) => {
    // generated by metamask
    // sends 4437 TRX from account3 to account2
    const rawData = "0xf86d808507aef40a00825208941286df686b80bd49e20f0bb54671bd99b61b999389f087be97c4383400008029a00a51cc99ca94f33930813729137e3300ce6a7d201fe5f43c1c2e385a25ef1ef4a03345cca28a8b9ca250a33945aff2063117156ab368a82af1a5190e817f62d7d9";
    // https://www.ethereumdecoder.com/?search=0xf86d808507aef40a00825208941286df686b80bd49e20f0bb54671bd99b61b999389f087be97c4383400008029a00a51cc99ca94f33930813729137e3300ce6a7d201fe5f43c1c2e385a25ef1ef4a03345cca28a8b9ca250a33945aff2063117156ab368a82af1a5190e817f62d7d9
    const res = await eth.eth_sendRawTransaction([rawData], context);
    console.log(res);
    // res is transaction ID
});
