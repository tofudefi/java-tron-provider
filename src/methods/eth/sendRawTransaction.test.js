import test from "ava";
import Web3 from "web3";
import * as eth_ from "./index.js";
import { autoRetyAllMethods } from "../autoRetry.js";
import * as errors from "../../errors.js";

import {
  address as ethAddress,
  hexToNumber,
  numberToHex,
  toBN,
} from "../utils/index.js";
import { createContext } from "../../index.js";

const eth = autoRetyAllMethods(eth_);

// priv key: 52087001767e9c30288232baa07d3ac5cf0e3c8de30a49b98424ccf9b92e2dfd
// const testAccount1 = ethAddress.fromTron("TAJLmoNzgYHDX5osdfa3c5s9G35fZMfaMT");
// const testAccount2 = ethAddress.fromTron("TBfAjdXMuo4rSGU8sT4rqRSFDZn1yLik8S");
// const testAccount3 = ethAddress.fromTron("TSTsLfQGzKrpU61LF7J3q4iiwnHBzAGLHC");

const context = createContext({ network: "shasta" });

test.skip("eth_sendRawTransaction", async (t) => {
  // generated by metamask
  // sends 4437 TRX from account3 to account2
  const rawData =
    "0xf86d808507aef40a00825208941286df686b80bd49e20f0bb54671bd99b61b999389f087be97c4383400008029a00a51cc99ca94f33930813729137e3300ce6a7d201fe5f43c1c2e385a25ef1ef4a03345cca28a8b9ca250a33945aff2063117156ab368a82af1a5190e817f62d7d9";
  // https://www.ethereumdecoder.com/?search=0xf86d808507aef40a00825208941286df686b80bd49e20f0bb54671bd99b61b999389f087be97c4383400008029a00a51cc99ca94f33930813729137e3300ce6a7d201fe5f43c1c2e385a25ef1ef4a03345cca28a8b9ca250a33945aff2063117156ab368a82af1a5190e817f62d7d9

  const res = await eth.eth_sendRawTransaction([rawData], context);
  console.log(res);
  // res is transaction ID
});
